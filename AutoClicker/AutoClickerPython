import tkinter as tk
from tkinter import simpledialog
from pynput.mouse import Button, Controller
from pynput import keyboard
import threading
import time

mouse = Controller()
clicking = False
hotkey = "<f4>"
listener = None
click_type = Button.left

# Function to perform the clicking
def click_mouse(interval):
    while clicking:
        mouse.click(click_type, 1)
        time.sleep(interval)

# Function to start auto clicking
def start_clicking():
    global clicking
    if not clicking:
        clicking = True
        interval = slider_interval.get() / 1000.0  # Convert milliseconds to seconds
        threading.Thread(target=click_mouse, args=(interval,), daemon=True).start()

# Function to stop auto clicking
def stop_clicking():
    global clicking
    clicking = False

# Function to toggle clicking state
def toggle_clicking():
    if clicking:
        stop_clicking()
    else:
        start_clicking()

# Function to set a new hotkey
def set_hotkey():
    global hotkey
    new_hotkey = simpledialog.askstring("Set Hotkey", "Enter a new hotkey (e.g., f4, a, ctrl+shift+a):")
    if new_hotkey:
        hotkey = f"<{new_hotkey}>"
        hotkey_label.config(text=f"Current Hotkey: {hotkey}")

# Listener for hotkey to toggle clicking
def on_hotkey_press(key):
    global hotkey
    try:
        if key == keyboard.Key[hotkey.strip('<>')]:
            toggle_clicking()
    except KeyError:
        if hasattr(key, 'char') and key.char == hotkey.strip('<>'):
            toggle_clicking()

listener = keyboard.Listener(on_press=on_hotkey_press)
listener.start()

# Function to update click type from dropdown selection
def update_click_type(event):
    global click_type
    if click_type_var.get() == "Left Click":
        click_type = Button.left
    elif click_type_var.get() == "Right Click":
        click_type = Button.right

# Create the GUI window
root = tk.Tk()
root.title("Auto Clicker")
root.geometry("180x200")

# Interval label and slider
label_interval = tk.Label(root, text="Click Interval (ms):")
label_interval.grid(row=0, column=0, columnspan=2, pady=2, padx=10, sticky="ew")

slider_interval = tk.Scale(root, from_=5, to=1000, orient="horizontal")
slider_interval.grid(row=1, column=0, columnspan=2, pady=2, padx=10, sticky="ew")

# Click type dropdown
click_type_var = tk.StringVar(root)
click_type_var.set("Left Click")  # Default value
click_type_dropdown = tk.OptionMenu(root, click_type_var, "Left Click", "Right Click", command=update_click_type)
click_type_dropdown.grid(row=2, column=0, columnspan=2, pady=2, padx=10, sticky="ew")

# Start and Stop buttons
button_start = tk.Button(root, text="Start Clicking", command=start_clicking, bg="lightgreen")
button_start.grid(row=3, column=0, pady=2, padx=5, sticky="ew")

button_stop = tk.Button(root, text="Stop Clicking", command=stop_clicking, bg="lightcoral")
button_stop.grid(row=3, column=1, pady=2, padx=5, sticky="ew")

# Hotkey label and set button
hotkey_label = tk.Label(root, text=f"Current Hotkey: {hotkey}")
hotkey_label.grid(row=4, column=0, columnspan=2, pady=2, padx=10, sticky="ew")

button_set_hotkey = tk.Button(root, text="Set Hotkey", command=set_hotkey)
button_set_hotkey.grid(row=5, column=0, columnspan=2, pady=2, padx=10, sticky="ew")

# Run the GUI loop
root.mainloop()